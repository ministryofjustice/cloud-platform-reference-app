version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Replace python2 with 3
          command: |
            apk add --no-cache python3 && \
            python3 -m ensurepip && \
            rm -r /usr/lib/python*/ensurepip && \
            pip3 install --upgrade pip setuptools && \
            if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
            if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
            rm -r /root/.cache
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              make
            pip install \
              docker-compose==1.21.2 \
              awscli==1.11.76 \
              flake8==3.5.0
      - run:
          name: Run code tests
          command: |
            make codetest
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - run:
          name: Run docker tests
          command: |
            docker-compose -f docker-compose.test.yml up --abort-on-container-exit --quiet-pull --no-color --exit-code-from=app
      - deploy:
          name: Push application Docker image
          command: |
            #if [ "${CIRCLE_BRANCH}" == "master" ]; then
              login="$(aws ecr get-login)"
              ${login}
              docker tag app "${ECR_ENDPOINT}/${CIRCLE_PROJECT_REPONAME}2:${CIRCLE_PROJECT_REPONAME}${CIRCLE_SHA1}"
              docker push "${ECR_ENDPOINT}/${CIRCLE_PROJECT_REPONAME}2:${CIRCLE_PROJECT_REPONAME}${CIRCLE_SHA1}"
            #fi
