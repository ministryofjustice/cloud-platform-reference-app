version: 2.0
jobs:
  build:
    docker:
      - image: ministryofjustice/cloud-platform-tools
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build application Docker image
          command: |
            docker build -t app .
      - deploy:
          name: Push application Docker image
          command: |
            ecr_login="$(AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} ECR_ENDPOINT=${ECR_ENDPOINT} aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_ENDPOINT)"
            docker tag app "${ECR_ENDPOINT}:${CIRCLE_SHA1}"
            docker push "${ECR_ENDPOINT}:${CIRCLE_SHA1}"
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker tag app "${ECR_ENDPOINT}:latest"
              docker push "${ECR_ENDPOINT}:latest"
            fi
  
  deploy_to_live_cluster:
    docker:
      - image: ministryofjustice/cloud-platform-tools
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Authenticate to LIVE cluster
          command: |
            echo -n ${CLUSTER_CERT_LIVE} | base64 -d > ./live_ca.crt
            kubectl config set-cluster ${CLUSTER_NAME_LIVE} --certificate-authority=./live_ca.crt --server=https://${CLUSTER_NAME_LIVE}
            kubectl config set-credentials circleci --token=${TOKEN_LIVE}
            kubectl config set-context ${CLUSTER_NAME_LIVE} --cluster=${CLUSTER_NAME_LIVE} --user=circleci --namespace=${NAMESPACE}
            kubectl config use-context ${CLUSTER_NAME_LIVE}
            kubectl config current-context
            kubectl --namespace=${NAMESPACE} get pods
      - deploy:
          name: Apply in LIVE CLUSTER
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              kubectl -n ${NAMESPACE} apply -f deploy/kubectl/live/
            fi

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy_to_live_cluster:
          requires:
            - build
