version: 2
jobs:
  build:
    docker:
      - image: ministryofjustice/cloud-platform-tools
        environment:
          REPONAME: demo-go-app
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Authenticate with cluster
          command: |
            echo -n ${K8S_CLUSTER_CERT} | base64 -d > ./ca.crt
            kubectl config set-cluster ${K8S_CLUSTER_NAME} --certificate-authority=./ca.crt --server=https://api.${K8S_CLUSTER_NAME}
            kubectl config set-credentials circleci --token=${K8S_TOKEN}
            kubectl config set-context ${K8S_CLUSTER_NAME} --cluster=${K8S_CLUSTER_NAME} --user=circleci --namespace=${K8S_NAMESPACE}
            kubectl config use-context ${K8S_CLUSTER_NAME}
            kubectl --namespace=${K8S_NAMESPACE} get pods
      - run:
          name: Build application Docker image
          command: |
            docker build -t app .
      - deploy:
          name: Push application Docker image
          command: |
            login="$(AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_DEMO} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_DEMO} aws ecr get-login --no-include-email)"
            ${login}

            docker tag app "${ECR_ENDPOINT}/${REPONAME}:${CIRCLE_SHA1}"
            docker push "${ECR_ENDPOINT}/${REPONAME}:${CIRCLE_SHA1}"

            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker tag app "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${REPONAME}:latest"
              docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${REPONAME}:latest"
            fi
